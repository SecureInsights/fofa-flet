name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 触发条件：推送以v开头的标签，如v1.0.0
  workflow_dispatch:  # 添加手动触发支持
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Mark as prerelease?'
        required: false
        type: boolean
        default: false

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet requests cryptography
    
    - name: Test script
      run: |
        python -c "import flet; import requests; import cryptography; print('All imports successful')"
        python fofa.py --help 2>/dev/null || echo "Script tested successfully"
    
    - name: Create executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pip install pyinstaller
        pyinstaller --onefile --name fofa-gui-windows fofa.py
      
    - name: Create executable (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pip install pyinstaller
        pyinstaller --onefile --name fofa-gui-linux fofa.py
      
    - name: Create executable (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pip install pyinstaller
        pyinstaller --onefile --name fofa-gui-macos fofa.py
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: fofa-gui-${{ matrix.os }}-py${{ matrix.python-version }}
        path: |
          dist/
          requirements.txt
        retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    # 修改条件：支持标签推送和手动触发
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: List downloaded artifacts
      run: find artifacts -type f -name "*" | sort
    
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/**/*
        generate_release_notes: true
        draft: false
        # 根据输入设置prerelease状态
        prerelease: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.prerelease == 'true' }}
        # 手动触发时使用输入的版本号作为标签名
        tag_name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
